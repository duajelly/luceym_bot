from aiogram.types import Message, ReplyKeyboardMarkup, ReplyKeyboardRemove
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram import Router
import sql_conf
from config import bot

from admin_handlers.access_groups import ALL_ADMINS
from analytics import send_analytics
import logging
logging.basicConfig(format='%(asctime)s - %(process)d-%(levelname)s - %(message)s', level=logging.INFO, datefmt='%d-%b-%y %H:%M:%S')

router = Router()

@router.message(Command(commands=['help_admin']))
async def admin_send_welcome(message: Message) -> None: 
    if message.from_user.id in ALL_ADMINS:

        welcome_message = (
            '/add_event - –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ'
            '\n/set_timetable - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'
            '\n/set_menu - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é'  
            '\n/generate - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏—è'            

            '\n\n<u>–ó–¥–æ—Ä–∏–∫ –ê–°</u>'
            '\n/close_statement - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–µ–∑–¥–æ–≤'
            '\n/all_unclosed_statements_admin - –Ω–µ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –≤—ã–µ–∑–¥—ã'

            '\n\n<u>–≠–±–µ—Ä–ª—è–π–Ω –ú–í</u>'
            '\n/application_close - –∑–∞–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Å–ø—Ä–∞–≤–∫—É'
            '\n/all_applications - –≤—Å–µ –∑–∞—è–≤–∫–∏ –Ω–∞ —Å–ø—Ä–∞–≤–∫—É'
            '\n/statement_reg- –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—ã–µ–∑–¥'
            '\n/all_unclosed_statements_reg - –Ω–µ–∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—ã–µ–∑–¥—ã'
        )
        await message.answer(welcome_message, reply_markup=ReplyKeyboardRemove())
    else: 
        await message.answer("–ù–µ –¥–æ—Ä–æ—Å –µ—â–µ!", reply_markup=ReplyKeyboardRemove()) 
    
@router.message(Command(commands=['start', 'help']))
async def send_welcome(message: Message, state: FSMContext) -> None:
    await send_analytics(user_id=message.from_user.id,
                        user_lang_code=message.from_user.language_code,
                        action_name='start')              
    
    exec('try: name = message.chat.first_name\nexcept:name = "–ß–µ–ª–æ–≤–µ–∫"')

    welcome_message = (
        f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! ü§ö'
        '–≠—Ç–æ –±–æ—Ç "–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ —Å–æ—Å–µ–Ω" –∏ –≤–æ—Ç –∫–∞–∫ —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å:'
        '\n\n<b></b> /timetable  - –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤'
        '\n<b></b> /events  - –±–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è'
        '\n<b></b> /statement - —Å–æ–≥–ª–∞—Å–æ–≤–∞—Ç—å –∑–∞–≤—è–ª–µ–Ω–∏–µ –Ω–∞ –≤—ã–µ–∑–¥'
        '\n<b></b> /document - –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∫–∏ –æ–± –æ–±—É—á–µ–Ω–∏–∏ –≤ –û–£'    
        #'\n<b>[dev]</b> /trips - —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –ø–æ–µ–∑–¥–∫–∏'    
        '\n<b></b> /menu - –º–µ–Ω—é –≤ —Å—Ç–æ–ª–æ–≤–æ–π'
        '\n<b>[dev]</b> /question - –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏'
        '\n\n–¢—ã –º–æ–∂–µ—à—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ /subscribe üòâ'
    )
    await message.answer(welcome_message, reply_markup=ReplyKeyboardRemove())

    await message.answer('\n\n<i>–í–Ω–∏–º–∞–Ω–∏–µ, –ø—Ä–æ–¥–æ–ª–∂–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ, —Ç—ã –¥–∞—ë—à—å '
                         '—Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Å–±–æ—Ä –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–§–∞–º–∏–ª–∏—è,'
                         ' –ò–º—è, –û—Ç—á–µ—Å—Ç–≤–æ, –ö–ª–∞—Å—Å), –≤ —Ç–æ–º —á–∏—Å–ª–µ –Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ–µ —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ '
                         '—ç—Ç–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ—Å–µ—â–µ–Ω–∏—è—Ö –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, '
                         '–∫–æ—Ç–æ—Ä—É—é —Å–æ–±–∏—Ä–∞–µ—Ç Google –ê–Ω–∞–ª–∏—Ç–∏–∫–∞. –ü–æ–¥—Ä–æ–±–Ω–µ–µ support@sipgc.ru</i>')

    try:
        cnx = sql_conf.mysql_create()
        check_guest_query = (f"SELECT * FROM users_bucket where id='{message.from_user.id}'")
        
        with cnx.cursor() as cursor:
            cursor.execute(check_guest_query)
            result = cursor.fetchall()

            count = 0
            for row in result:
                count += 1

            if count == 0:
                check_guest_query = (f"INSERT INTO users_bucket (id, username, subscription) VALUES ('{message.from_user.id}', '{message.from_user.username}', 0)")

                cursor.execute(check_guest_query)
                cnx.commit()
        cnx.close()

    except Exception as e:
        print(e)

# @router.message(F.content_type.in_({'voice'}))
# async def handle_text(message: Message) -> None:
#     file_id = message.voice.file_id
#     file = await bot.get_file(file_id)
#     file_path = file.file_path
#     await bot.download_file(file_path, f"src/voice/{file_id}.mp3")

# @router.message(F.content_type.in_({'video_note'}))
# async def handle_text(message: Message) -> None:
#     await message.answer(str(message))

# @router.message(F.content_type.in_({'photo'}))
# async def handle_text(message: Message) -> None:
#     await bot.download(
#         message.photo[-1],
#         destination=f"src/img/{message.photo[-1].file_id}.jpg"
#     )
#     photo=open(f"src/img/{message.photo[-1].file_id}.jpg", "rb")
#     await bot.send_photo(message.from_user.id, photo)

@router.message()
async def unknown_func(message: Message) -> None:
    await message.answer("–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É. –ß—Ç–æ –±—ã —è —Ä–∞—Å—Å–∫–∞–∑–∞–ª —Ç–µ–±–µ –æ —Å–≤–æ–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö –Ω–∞–ø–∏—à–∏ /help",  reply_markup=ReplyKeyboardRemove())

async def sth_wrong (message: Message, e) -> None:
    await send_analytics(user_id=message.from_user.id,
                        user_lang_code=message.from_user.language_code,
                        action_name='error')
    logging.warning(e)
    await message.answer("–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –Ø —É–∂–µ —Å–æ–æ–±—â–∏–ª –æ–± —ç—Ç–æ–º –∞–¥–º–∏–Ω–∞–º", reply_markup=ReplyKeyboardRemove())